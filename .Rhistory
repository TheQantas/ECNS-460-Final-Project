geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = 0.5, hjust = 0.5) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = 0.5, hjust = 0.5, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = -0.5, hjust = 0.5, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = -0.5, hjust = -0.5, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = -0.5, hjust = 0.5, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = -0.75, hjust = 0.5, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = -0.5, hjust = 0.5, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = -1, hjust = 0.5, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = 0, hjust = 0.5, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = 0.2, hjust = 0.5, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = -0.2, hjust = 0.5, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = -0.2, hjust = 0.7, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = -0.2, hjust = 0.3, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = -0.2, hjust = 1, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = -0.2, hjust = 0.5, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = -0.2, hjust = -0.5, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point colo
geom_text_repel(aes(label = team, color = text_color), vjust = -0.2, hjust = -0.2, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), vjust = -0.2, hjust = -0.5, box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), box.padding = 0.1) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +  # Map point color
geom_text_repel(aes(label = team, color = text_color), box.padding = 0.2) +
scale_color_identity() +  # Use the exact colors provided in the data
theme_minimal()
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +
geom_text_repel(aes(label = team, color = text_color), box.padding = 0.2) +
scale_color_identity() +
theme_minimal() +
labels(main = "Team Rank Volatility", xlab = "Offense", ylab = "Defense")
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +
geom_text_repel(aes(label = team, color = text_color), box.padding = 0.2) +
scale_color_identity() +
theme_minimal() +
labs(main = "Team Rank Volatility", xlab = "Offense", ylab = "Defense")
ggplot(vol_teams, aes(x = off_point_vol, y = def_point_vol)) +
geom_point(aes(color = main_color), size = 4) +
geom_text_repel(aes(label = team, color = text_color), box.padding = 0.2) +
scale_color_identity() +
theme_minimal() +
labs(title = "Team Rank Volatility", x = "Offense", y = "Defense")
ggplot(vol_teams, aes(x = off_point_abs, y = def_point_abs)) +
geom_point(aes(color = main_color), size = 4) +
geom_text_repel(aes(label = team, color = text_color), box.padding = 0.2) +
scale_color_identity() +
theme_minimal() +
labs(title = "Team Rank Absolute Deviation", x = "Offense", y = "Defense")
ggplot(vol_teams, aes(x = off_point_abs, y = def_point_abs)) +
geom_point(aes(color = main_color), size = 4) +
geom_text_repel(aes(label = team, color = text_color), box.padding = 0.2) +
scale_color_identity() +
theme_minimal() +
labs(title = "Team Rank Absolute Deviation", x = "Offense", y = "Defense")
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/exploratory_figures.R", echo=TRUE)
ggplot(league_by_season, aes(x = season, y = touchdown_per_game)) +
geom_line(color = "blue") +
geom_smooth(method = "lm", se = TRUE, color = "darkblue") +
labs(title = "Touchdowns per Game by Season", x = "Season", y = "Touchdowns") +
coord_cartesian(xlim = c(2006, 2023)) +
theme_minimal()
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/exploratory_figures.R", echo=TRUE)
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/exploratory_figures.R", echo=TRUE)
ggsave("scaled_ggplot.png", plot = p, width = 12, height = 8, dpi = 300)
abs_dev = ggplot(vol_teams, aes(x = off_point_abs, y = def_point_abs)) +
geom_point(aes(color = main_color), size = 4) +
geom_text_repel(aes(label = team, color = text_color), box.padding = 0.2) +
scale_color_identity() +
theme_minimal() +
labs(title = "Team Rank Absolute Deviation", x = "Offense", y = "Defense")
ggsave("scaled_ggplot.png", plot = abs_dev, width = 12, height = 8, dpi = 300)
ggsave("scaled_ggplot2.png", plot = abs_dev, width = 24, height = 16, dpi = 300)
ggsave("scaled_ggplot3.png", plot = abs_dev, width = 6, height = 4, dpi = 300)
ggsave("plots/abs_dev.png", plot = abs_dev, width = 6, height = 4, dpi = 300)
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/exploratory_figures.R", echo=TRUE)
abs_dev_plot = ggplot(vol_teams, aes(x = off_point_abs, y = def_point_abs)) +
geom_point(aes(color = main_color), size = 4) +
geom_text_repel(aes(label = team, color = text_color), box.padding = 0.2) +
scale_color_identity() +
theme_minimal() +
labs(title = "Team Rank Absolute Deviation", x = "Offense", y = "Defense")
ggsave("plots/abs_dev.png", plot = abs_dev_plot, width = 6, height = 4, dpi = 300)
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/exploratory_figures.R", echo=TRUE)
grep("per", colnames(league))
colnames(league)
if (!exists('offense')) {
offense = read.csv('data/drives_offense.csv')
}
View(offense)
offense$games_played = ifelse(
offense$season < 2021 | (offense$season == 2022 & (offense$team == "BUF" | offense$team == "CIN")),
16,
17
)
offense$games_played = ifelse(
offense$season < 2021 | (offense$season == 2022 & (offense$team == "BUF" | offense$team == "CIN")),
16,
17
)
offense$punt = offense$punt + offense$turnovers + offensse$blocked_punt + offense$downs
offense$punt = offense$punt + offense$turnovers + offense$blocked_punt + offense$downs
offense = offense[, !names(df) %in% c("punt", "turnovers", "blocked_punt", "downs")]
offense = offense[, !names(offense) %in% c("punt", "turnovers", "blocked_punt", "downs")]
offense$punt = offense$punt + offense$turnovers + offense$blocked_punt + offense$blocked_fg + offense$downs
rm(offense)
if (!exists('offense')) {
offense = read.csv('data/drives_offense.csv')
}
offense$games_played = ifelse(
offense$season < 2021 | (offense$season == 2022 & (offense$team == "BUF" | offense$team == "CIN")),
16,
17
)
offense$punt = offense$punt + offense$turnovers + offense$blocked_punt + offense$blocked_fg + offense$downs
offense = offense[, !names(offense) %in% c("punt", "turnovers", "blocked_punt", "blocked_fg", "downs")]
rm(offense)
if (!exists('offense')) {
offense = read.csv('data/drives_offense.csv')
}
offense$games_played = ifelse(
offense$season < 2021 | (offense$season == 2022 & (offense$team == "BUF" | offense$team == "CIN")),
16,
17
)
offense$punt = offense$punt + offense$turnovers + offense$blocked_punt + offense$blocked_fg + offense$missed_fg + offense$downs
offense = offense[, !names(offense) %in% c("punt", "turnovers", "blocked_punt", "blocked_fg", "missed_fg", "downs")]
rm(list=ls())
if (!exists('defense')) {
defense = read.csv('data/drives_defense.csv')
}
View(defense)
defense$punt = defense$punt + defense$turnovers + defense$blocked_punt + defense$blocked_fg + defense$missed_fg + defense$downs
defense = defense[, !names(defense) %in% c("punt", "turnovers", "blocked_punt", "blocked_fg", "missed_fg", "downs")]
View(defense)
if (!exists('offense')) {
offense = read.csv('data/drives_offense.csv')
}
offense$games_played = ifelse(
offense$season < 2021 | (offense$season == 2022 & (offense$team == "BUF" | offense$team == "CIN")),
16,
17
)
offense$punt = offense$punt + offense$turnovers + offense$blocked_punt + offense$blocked_fg + offense$missed_fg + offense$downs
offense = offense[, !names(offense) %in% c("punt", "turnovers", "blocked_punt", "blocked_fg", "missed_fg", "downs")]
defense$games_played = ifelse(
defense$season < 2021 | (defense$season == 2022 & (defense$team == "BUF" | defense$team == "CIN")),
16,
17
)
defense$punt = defense$punt + defense$turnovers + defense$blocked_punt + defense$blocked_fg + defense$missed_fg + defense$downs
rm(offense)
rm(defense)
if (!exists('offense')) {
offense = read.csv('data/drives_offense.csv')
}
if (!exists('defense')) {
defense = read.csv('data/drives_defense.csv')
}
stopifnot(nrow(offense) %% 32 == 0) #make sure all teams are present
stopifnot(nrow(defense) %% 32 == 0) #make sure all teams are present
offense$games_played = ifelse(
offense$season < 2021 | (offense$season == 2022 & (offense$team == "BUF" | offense$team == "CIN")),
16,
17
)
offense$punt = offense$punt + offense$turnovers + offense$blocked_punt + offense$blocked_fg + offense$missed_fg + offense$downs
offense = offense[, !names(offense) %in% c("punt", "turnovers", "blocked_punt", "blocked_fg", "missed_fg", "downs")]
offense$points_per_game = offense$points / offense$games_played
offense$yard_per_game = offense$yards / offense$games_played
offense$touchdown_per_game = offense$touchdown / offense$games_played
offense$field_goal_per_game = offense$field_goal / offense$games_played
rm(offense)
rm(defense)
if (!exists('offense')) {
offense = read.csv('data/drives_offense.csv')
}
offense$games_played = ifelse(
offense$season < 2021 | (offense$season == 2022 & (offense$team == "BUF" | offense$team == "CIN")),
16,
17
)
offense$punt = offense$punt + offense$turnovers + offense$blocked_punt + offense$blocked_fg + offense$missed_fg + offense$downs
offense = offense[, !names(offense) %in% c("turnovers", "blocked_punt", "blocked_fg", "missed_fg", "downs")]
offense_total_by_season = offense |> select(-team, -playoff) |> group_by(season) |> summarize(
across(everything(), sum)
)
library(dplyr)
offense_total_by_season = offense |> select(-team, -playoff) |> group_by(season) |> summarize(
across(everything(), sum)
)
off_pt_model = lm(points ~ season, data = offense_total_by_season)
off_yds_model = lm(yards ~ season, data = offense_total_by_season)
off_td_model = lm(touchdown ~ season, data = offense_total_by_season)
off_fg_model = lm(field_goal ~ season, data = offense_total_by_season)
off_punt_model = lm(punt ~ season, data = offense_total_by_season)
off_pg_pt_model = lm(points_per_game ~ season, data = offense_total_by_season)
off_pg_yds_model = lm(yards_per_game ~ season, data = offense_total_by_season)
offense_total_by_season = offense |> select(-team, -playoff) |> group_by(season) |> summarize(
across(everything(), sum)
)
View(offense_total_by_season)
rm(list=ls())
library(dplyr)
library(dplyr)
if (!exists('offense')) {
offense = read.csv('data/drives_offense.csv')
}
offense$games_played = ifelse(
offense$season < 2021 | (offense$season == 2022 & (offense$team == "BUF" | offense$team == "CIN")),
16,
17
)
offense$punt = offense$punt + offense$turnovers + offense$blocked_punt + offense$blocked_fg + offense$missed_fg + offense$downs
offense = offense[, !names(offense) %in% c("turnovers", "blocked_punt", "blocked_fg", "missed_fg", "downs")]
offense$points_per_game = offense$points / offense$games_played
offense$yard_per_game = offense$yards / offense$games_played
offense$touchdown_per_game = offense$touchdown / offense$games_played
offense$field_goal_per_game = offense$field_goal / offense$games_played
offense$punt_per_game = offense$punt / offense$games_played
offense$safety_per_game = offense$safety / offense$games_played
offense$total_per_game = offense$total / offense$games_played
offense$end_of_period_per_game = offense$end_of_period / offense$games_played
offense_total_by_season = offense |> select(-team, -playoff) |> group_by(season) |> summarize(
across(everything(), sum)
)
off_pt_model = lm(points ~ season, data = offense_total_by_season)
off_yds_model = lm(yards ~ season, data = offense_total_by_season)
off_td_model = lm(touchdown ~ season, data = offense_total_by_season)
off_fg_model = lm(field_goal ~ season, data = offense_total_by_season)
off_punt_model = lm(punt ~ season, data = offense_total_by_season)
off_pg_pt_model = lm(points_per_game ~ season, data = offense_total_by_season)
off_pg_yds_model = lm(yards_per_game ~ season, data = offense_total_by_season)
off_pg_td_model = lm(touchdown_per_game ~ season, data = offense_total_by_season)
off_pg_fg_model = lm(field_goal_per_game ~ season, data = offense_total_by_season)
off_pg_punt_model = lm(punt_per_game ~ season, data = offense_total_by_season)
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
rm(list=ls)()
rm(list=ls())
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
rm(list=ls())
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
rm(list=ls())
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
rm(list=ls())
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
rm(expected_games, i)
rm(expected_games, i, season, team)
rm(list=ls())
save(odds, file = "output/odds.RData")
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
View(league)
league = left_join(
league,
odds |> filter(playoff==FALSE) |> group_by(away, season) |> summarize(
away_wins = sum(ifelse(away_score > home_score, 1, 0)),
away_losses = sum(ifelse(away_score < home_score, 1, 0)),
away_ties = sum(ifelse(away_score == home_score, 1, 0)),
away_wins_ats = sum(ifelse(away_score - home_score < home_line, 1, 0)),
away_losses_ats = sum(ifelse(away_score - home_score > home_line, 1, 0)),
away_ties_ats = sum(ifelse(away_score - home_score == home_line, 1, 0)),
.groups = "drop"
) |> select(away_wins, away_losses, away_wins_ats, away_losses_ats, away_ties, away_ties_ats, season, away),
by = c("season", "team" = "away"),
)
rm(list=ls())
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
View(odds)
stopifnot(league$wins + league$losses + league$ties == league$off_games_played)
stopifnot(league$def_games_played == league$off_games_played)
stopifnot(league$wins_ats + league$losses_ats + league$ties_ats == league$off_games_played)
?stop
for (i in 1:nrow(league)) {
expected_games = league[i, 'off_games_played']
played_games = league[i, 'wins'] + league[i, 'losses'] + league[i, 'ties']
ats_games = league[i, 'wins_ats'] + league[i, 'losses_ats'] + league[i, 'ties_ats']
if (expected_games != played_games) {
stop(sprintf(
"%s in %d expected %d games but played %d",
league[i, 'team'],
leauge[i, 'season'],
expected_games,
played_games
))
}
}
league[10,'wins']
for (i in 1:nrow(league)) {
if (league[i, 'season'] < 2006) {
next
}
expected_games = league[i, 'off_games_played']
played_games = league[i, 'wins'] + league[i, 'losses'] + league[i, 'ties']
ats_games = league[i, 'wins_ats'] + league[i, 'losses_ats'] + league[i, 'ties_ats']
if (expected_games != played_games) {
stop(sprintf(
"%s in %d expected %d games but played %d",
league[i, 'team'],
leauge[i, 'season'],
expected_games,
played_games
))
}
}
for (i in 1:nrow(league)) {
if (league[i, 'season'] < 2006) {
next
}
expected_games = league[i, 'off_games_played']
played_games = league[i, 'wins'] + league[i, 'losses'] + league[i, 'ties']
ats_games = league[i, 'wins_ats'] + league[i, 'losses_ats'] + league[i, 'ties_ats']
if (expected_games != played_games) {
stop(sprintf(
"%s in %d expected %d games but played %d",
league[i, 'team'],
leauge[i, 'season'],
expected_games,
played_games
))
}
if (expected_games != ats_games) {
stop(sprintf(
"%s in %d expected %d games but played %d ATS",
league[i, 'team'],
leauge[i, 'season'],
expected_games,
ats_games
))
}
}
rm(list=ls())
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
View(odds)
rm(list=ls())
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
rm(list=ls())
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
rm(list=ls())
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
rm(list=ls())
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/parse/init.R", echo=TRUE)
record_plot = ggplot(league |> filter(!is.na(record)), aes(x = record, y = record_ats)) +
geom_count(aes(color = after_stat(n)), show.legend = FALSE) +
geom_smooth(method = "lm", se = TRUE, color = "#33aa00") +
scale_color_gradient(low = "lightblue", high = "darkblue") +
labs(title = "Regular Season Record and ATS", x = "Record", y = "Record ATS") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
library(ggplot2)
library(ggrepel)
record_plot = ggplot(league |> filter(!is.na(record)), aes(x = record, y = record_ats)) +
geom_count(aes(color = after_stat(n)), show.legend = FALSE) +
geom_smooth(method = "lm", se = TRUE, color = "#33aa00") +
scale_color_gradient(low = "lightblue", high = "darkblue") +
labs(title = "Regular Season Record and ATS", x = "Record", y = "Record ATS") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave("plots/record_vs_ats.png", plot = record_plot, width = 6, height = 4, dpi = 300)
ggplot(league |> filter(!is.na(record)), aes(x = record, y = record_ats)) +
geom_count(aes(color = after_stat(n)), show.legend = FALSE) +
geom_smooth(method = "lm", se = TRUE, color = "#33aa00") +
scale_color_gradient(low = "lightblue", high = "darkblue") +
labs(title = "Regular Season Record and ATS", x = "Record", y = "Record ATS") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
View(league_by_season)
colnames(league)
library(shiny); runApp('app2.R')
source("~/07-semester-fall-2024/07-ECNS-460/ECNS-460-Final-Project/app3.R", echo=TRUE)
runApp('app3.R')
league_by_team
colnames(league_by_team)
league %>%
group_by(team) %>%
summarise(total = sum(.data[[input$play_metric]])) %>%
ggplot(aes(x = reorder(team, -total), y = total)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = paste("Distribution of", input$play_metric, "by Team"),
x = "Team", y = paste(input$play_metric, "Total"))
runApp('app3.R')
runApp('app3.R')
runApp('app3.R')
runApp('app3.R')
team_names = list(
"Arizona Cardinals" = "ARI",
"Atlanta Falcons" = "ATL",
"Baltimore Ravens" = "BAL",
"Buffalo Bills" = "BUF",
"Carolina Panthers" = "CAR",
"Chicago Bears" = "CHI",
"Cincinnati Bengals" = "CIN",
"Cleveland Browns" = "CLE",
"Dallas Cowboys" = "DAL",
"Denver Broncos" = "DEN",
"Detroit Lions" = "DET",
"Green Bay Packers" = "GB",
"Houston Texans" = "HOU",
"Indianapolis Colts" = "IND",
"Jacksonville Jaguars" = "JAX",
"Kansas City Chiefs" = "KC",
"Los Angeles Chargers" = "LAC",
"Los Angeles Rams" = "LAR",
"Las Vegas Raiders" = "LV",
"Miami Dolphins" = "MIA",
"Minnesota Vikings" = "MIN",
"New England Patriots" = "NE",
"New Orleans Saints" = "NO",
"New York Giants" = "NYG",
"New York Jets" = "NYJ",
"Philadelphia Eagles" = "PHI",
"Pittsburgh Steelers" = "PIT",
"Seattle Seahawks" = "SEA",
"San Francisco 49ers" = "SF",
"Tampa Bay Bucaneers" = "TB",
"Tennessee Titans" = "TEN",
"Washington Commanders" = "WAS"
)
runApp('app4.R')
View(league_by_season)
runApp('app4.R')
x = lm(league$record ~ league$record_ats)
x
summary(x)
View(league)
View(league[624, c("record", "record_ats")]
)
View(league[312, c("team", "season", "record", "record_ats")])
View(league[42, c("team", "season", "record", "record_ats")])
View(league[420, c("team", "season", "record", "record_ats")])
